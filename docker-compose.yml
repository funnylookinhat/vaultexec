
version: '2'
services:
  app:
    image: golang:1.9.2-alpine
    depends_on:
      - vault_init_a
      - vault_init_b
      - vault
    volumes:
      - .:/go/src/vaultexec
    working_dir: /go/src/vaultexec
    command: go run main.go vault.go run.go printenv
    environment:
      VAULT_ADDR: http://vault:8200
      VAULT_TOKEN: test_token
      VAULT_PATH: secret/test_secrets_a/all,secret/test_secrets_b/all

  vault:
    image: vault
    cap_add:
      - IPC_LOCK
    ports:
        - "28200:8200"
    environment:
      VAULT_DEV_ROOT_TOKEN_ID: test_token

  # Initializes local vault with dev secrets at secret/test_secrets_a/all then terminates
  vault_init_a:
    image: vault
    depends_on:
      - vault
    cap_add:
      - IPC_LOCK
    environment:
      VAULT_DEV_ROOT_TOKEN_ID: test_token
    command: 'sh -c "VAULT_ADDR=http://vault:8200 VAULT_TOKEN=$$VAULT_DEV_ROOT_TOKEN_ID vault write secret/test_secrets_a/all @/test_secrets_a.json"'
    volumes:
      - ./test/secrets_a.json:/test_secrets_a.json

  # Initializes local vault with dev secrets at secret/test_secrets_b/all then terminates
  vault_init_b:
    image: vault
    depends_on:
      - vault
    cap_add:
      - IPC_LOCK
    environment:
      VAULT_DEV_ROOT_TOKEN_ID: test_token
    command: 'sh -c "VAULT_ADDR=http://vault:8200 VAULT_TOKEN=$$VAULT_DEV_ROOT_TOKEN_ID vault write secret/test_secrets_b/all @/test_secrets_b.json"'
    volumes:
      - ./test/secrets_b.json:/test_secrets_b.json
